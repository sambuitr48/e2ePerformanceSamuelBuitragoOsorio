name: Spring Boot CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SPRING_PROFILES_ACTIVE: test
  SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
  SPRING_DATASOURCE_USERNAME: postgres
  SPRING_DATASOURCE_PASSWORD: postgres

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build application
        run: ./mvnw clean package -DskipTests

      - name: Set up Chrome for Selenium
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 'latest'

      - name: Start application
        run: |
          java -jar target/*.jar &
          echo "Waiting for application to start..."
          timeout 60 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:8080/register)" != "200" ]]; do sleep 5; done' || false

      - name: Run E2E tests
        run: |
          sudo apt-get install -y xvfb
          Xvfb :99 -screen 0 1280x1024x24 &
          export DISPLAY=:99
          ./mvnw test -Dtest=LoginTest
        env:
          DISPLAY: ":99"

      - name: Install JMeter
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          JMETER_VERSION=5.6.3
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz
          tar -xzf apache-jmeter-${JMETER_VERSION}.tgz
          sudo mv apache-jmeter-${JMETER_VERSION} /opt/jmeter
          sudo ln -s /opt/jmeter/bin/jmeter /usr/local/bin/jmeter

      - name: Run JMeter tests
        run: |
          mkdir -p test-results/jmeter
          jmeter -n \
            -t src/test/jmeter/register_test.jmx \
            -l test-results/jmeter/results.jtl \
            -e -o test-results/jmeter/report

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            target/surefire-reports
            test-results/jmeter
        if: always()